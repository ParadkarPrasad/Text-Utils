{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0fd37e7d.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item active\">\r\n          <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li> */}\r\n       \r\n      \r\n      </ul>\r\n      {/* <form className=\"form-inline my-2 my-lg-0\">\r\n        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n  \r\n  const handleUpClick= ()=>{\r\n    // console.log(\"Upper case was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Upper Case\", \"success\");\r\n  }\r\n  const handleLowClick= ()=>{\r\n    // console.log(\"Lower case was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lower Case\", \"success\");\r\n  }\r\n  const handleOnChange= (event)=>{\r\n    // console.log(\"on change\");\r\n    setText(event.target.value);\r\n  }\r\n  const handleClearClick =()=>{\r\n    let newText ='';\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared\", \"success\");\r\n  }\r\n  const handleCopy=()=>{\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to clipboard\", \"success\");\r\n  }\r\n\r\n\r\n  const[text, setText]= useState(\"\");\r\n  return (\r\n    <>\r\n    <div className=\"container\"style={{color:props.mode==='dark'?'white':'black'}}>\r\n    <h1 >{props.heading} </h1>\r\n      <div className=\"mb-3\">\r\n      <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'black'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary mx-1\"onClick={handleUpClick}> Convert to Upper Case</button>\r\n    <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Convert to lower case</button>\r\n    <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Test</button>\r\n    <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n    \r\n    </div>\r\n    <div className=\"container my-2\"style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split (\" \").length} words,{text.length} characters</p>\r\n      <p>{0.008*text.split (\" \").length} Minutes to read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something in textbox above to  preview it\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize =(word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    \r\n    props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        \r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport React,{useState} from 'react'\nimport Navbar from './components/Navbar';\n import Textform from './components/Textform';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not.\n  const[alert, setAlert]= useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500)\n  }\n\n const toggleMode=()=>{\n  if(mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor = 'grey';\n    showAlert(\"Dark mode is enabled\", \"success\");\n  }\n  else{\n    setMode ('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode is enabled\",\"success\");\n  }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n\n          {/* <Route exact path=\"/\"> */}\n          <Textform heading=\"Enter text to analyze\" showAlert={showAlert} mode={mode}/>\n          {/* </Route> */}\n    {/* </Switch> */}\n    </div>\n    {/* </Router>   */}\n\n </>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}